name: Deploy to Vercel

on:
  push:
    branches: [ main ]
  workflow_run:
    workflows: ["CI/CD Pipeline"]
    branches: [main]
    types: [completed]

env:
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}

jobs:
  deploy:
    name: Deploy to Vercel
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' || github.event_name == 'push' }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'

      - name: Install Vercel CLI
        run: npm install -g vercel@latest

      - name: Pull Vercel environment information
        run: vercel pull --yes --environment=production --token=${{ secrets.VERCEL_TOKEN }}

      - name: Build project artifacts
        run: vercel build --prod --token=${{ secrets.VERCEL_TOKEN }}

      - name: Deploy project artifacts to Vercel
        id: deploy
        run: |
          url=$(vercel deploy --prebuilt --prod --token=${{ secrets.VERCEL_TOKEN }})
          echo "url=$url" >> $GITHUB_OUTPUT
          echo "🚀 Deployed to: $url"

      - name: Create deployment comment
        if: github.event_name == 'push'
        uses: actions/github-script@v7
        with:
          script: |
            const url = '${{ steps.deploy.outputs.url }}';
            const body = `🚀 **Deployment successful!**
            
            **Live URL:** ${url}
            
            **Deployment details:**
            - Commit: \`${context.sha.substring(0, 7)}\`
            - Branch: \`${context.ref.replace('refs/heads/', '')}\`
            - Workflow: [${context.runNumber}](${context.payload.repository.html_url}/actions/runs/${context.runId})
            
            ---
            *Deployed automatically by Vercel*`;
            
            github.rest.repos.createCommitComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              commit_sha: context.sha,
              body: body
            });

  # Health check after deployment
  health-check:
    name: Post-deployment Health Check
    runs-on: ubuntu-latest
    needs: [deploy]
    steps:
      - name: Wait for deployment
        run: sleep 30

      - name: Health check
        run: |
          # Check if deployment is responsive
          curl -f -s -o /dev/null ${{ needs.deploy.outputs.url }} || exit 1
          echo "✅ Deployment health check passed"

      - name: Performance check
        run: |
          # Basic performance check
          response_time=$(curl -o /dev/null -s -w "%{time_total}" ${{ needs.deploy.outputs.url }})
          echo "Response time: ${response_time}s"
          if (( $(echo "$response_time > 3.0" | bc -l) )); then
            echo "⚠️ Warning: Response time > 3s"
          else
            echo "✅ Response time OK"
          fi